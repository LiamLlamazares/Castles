.board {
    position: relative;
    width: 100vw; /* Use viewport width for full width */
    height: 100vh; /* Use viewport height for full height */
    margin: 20px; /* Remove margin to fit the board to the edges */
  }
  
  
/* Here we define a style for a hexagon defined through the coordinates of its corners */
  /* We add white and black hexagon subtypes */
    .hexagon {
        fill: #ddd; /* Fill color for the hexagon */
        stroke: #aaa; /* Border color for the hexagon */
        stroke-width: 4; /* Border width for the hexagon */
    }
    .hexagon-dark {
        fill: rgb(209,139,71);
        stroke: #aaa; /* Border color for the hexagon */
        stroke-width: 4; /* Border width for the hexagon */
    }
    .hexagon-mid {
        fill: rgb(232,171,111);
        stroke: #aaa; /* Border color for the hexagon */
        stroke-width: 4; /* Border width for the hexagon */
    }
    .hexagon-light {
      fill: rgb(255,206,158); /* Fill color for the hexagon */
      stroke: #aaa; /* Border color for the hexagon */
      stroke-width: 4; /* Border width for the hexagon */
  }
  .hexagon-river {
    fill: RGB(56,175,205); /* Fill color for the hexagon */
    stroke: #aaa; /* Border color for the hexagon */
    stroke-width: 4; /* Border width for the hexagon */
}
.hexagon-dark.hexagon-high-ground {
  fill: rgb(139, 69, 19); /* Darker shade for dark high ground */
  stroke-width: 4;
  filter: url(#shadow)
}

.hexagon-mid.hexagon-high-ground {
  fill: rgb(157, 78, 21); /* Darker shade for mid high ground */
  stroke-width: 4;
  filter: url(#shadow)
}

.hexagon-light.hexagon-high-ground {
  fill: rgb(175, 87, 24); /* Darker shade for light high ground */
  stroke-width: 4;
  filter: url(#shadow)
}

.hexagon-castles {
  fill: purple; /* Fill color for the hexagon */
  stroke: #aaa; /* Border color for the hexagon */
  stroke-width: 4; /* Border width for the hexagon */
}
.hexagon-white-castle {
  fill: aquamarine; /* Fill color for the hexagon */;
  stroke: #aaa; /* Border color for the hexagon */
  stroke-width: 4; /* Border width for the hexagon */
}
.hexagon-black-castle {
  fill: indigo; /* Fill color for the hexagon */
  stroke: #aaa; /* Border color for the hexagon */
  stroke-width: 4; /* Border width for the hexagon */
}
.hexagon-castle-adjacent {
  fill: red;
}


.hexagon, .hexagon-dark, .hexagon-mid, .hexagon-light, .hexagon-river, .hexagon-castles {
  transition: fill 1s ease; /* Add a transition effect to the fill color */
  
}

/* .hexagon:hover, .hexagon-dark:hover, .hexagon-mid:hover, .hexagon-light:hover, .hexagon-river:hover, .hexagon-castles:hover {
  fill: gray /* Change the fill color on hover */
 */

.board image {
  position: relative;
  z-index: 2;
}

.legal {
  fill: #00ff00;
  stroke: #aaa;
  stroke-width: 4;
}
.legalMoveDot {
  fill: rgba(100, 111, 64);
  cursor: pointer;
}
.legalMoveDot:hover {
  fill: rgba(100, 111, 64, 0.5);
}
.legalAttackDot {
  fill: rgba(255, 0, 0);
  cursor: pointer;
}
.legalAttackDot:hover {
  fill: rgba(255, 0, 0, 0.5);
}
.piece {
  cursor: pointer;
}
:root {
  --backgroundColor: rgba(246, 241, 209);
  --colorShadeA: rgb(106, 163, 137);
  --colorShadeB: rgb(121, 186, 156);
  --colorShadeC: rgb(150, 232, 195);
  --colorShadeD: rgb(187, 232, 211);
  --colorShadeE: rgb(205, 255, 232);
}

.button-container {
  position: absolute;
  top: 10px; /* Adjust as needed */
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 10px;
}

.takeback-button, .coordinates-button, .pass-button {
  position: relative;
  display: inline-block;
  cursor: pointer;
  outline: none;
  border: 0;
  vertical-align: middle;
  text-decoration: none;
  font-size: 1rem;
  color: var(--colorShadeA);
  font-weight: 700;
  text-transform: uppercase;
  padding: .5em 1em;
  border: 2px solid var(--colorShadeA);
  border-radius: 1em;
  background: var(--colorShadeE);
  transform-style: preserve-3d;
  transition: all 175ms cubic-bezier(0, 0, 1, 1);
}

.takeback-button::before, .coordinates-button::before, .pass-button::before {
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--colorShadeC);
  border-radius: inherit;
  box-shadow: 0 0 0 2px var(--colorShadeB), 0 0.75em 0 0 var(--colorShadeA);
  transform: translate3d(0, 0.75em, -1em);
  transition: all 175ms cubic-bezier(0, 0, 1, 1);
}

.takeback-button:hover, .coordinates-button:hover, .pass-button:hover {
  background: var(--colorShadeD);
}

.takeback-button:hover::before, .coordinates-button:hover::before, .pass-button:hover::before {
  box-shadow: 0 0 0 2px var(--colorShadeB), 0 0.375em 0 0 var(--colorShadeA);
}

.takeback-button:active, .coordinates-button:active, .pass-button:active {
  transform: translate(0em, 0.75em);
}

.takeback-button:active::before, .coordinates-button:active::before, .pass-button:active::before {
  transform: translate3d(0, 0, -1em);
  box-shadow: 0 0 0 2px var(--colorShadeB), 0 0.25em 0 0 var(--colorShadeB);
}